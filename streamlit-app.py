# -*- coding: utf-8 -*-
"""Copy of Proyek Analisis Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/174_NwF01gMFVhvRILW8mxcCNOInjo3XR

# Proyek Analisis Data: Air Quality Dataset (Huairou)
- **Nama:** Akhtar Reyhansyach
- **Email:** akhtar.reyhansyach@mail.ugm.ac.id
- **ID Dicoding:** akhtar_rey

## Menentukan Pertanyaan Bisnis

- Pertanyaan 1:
Bagaimana pengaruh Karbon Monoksida (CO) terhadap Suhu Udara di Huairou?
- Pertanyaan 2:
Bagaimana trend Karbon Monoksida (CO) dari tahun 2013-2017 di Huairou?

## Import Semua Packages/Library yang Digunakan
"""

#Import Library yang dibutuhkan
#untuk kalkulasi
import numpy as np
#untuk pengelolaan dataframe
import pandas as pd
#untuk visualisasi
import matplotlib.pyplot as plt
import seaborn as sns

"""## Data Wrangling

### Gathering Data
"""

#Memanggil Data (dari github raw link)
df = pd.read_csv('https://raw.githubusercontent.com/marceloreis/HTI/master/PRSA_Data_20130301-20170228/PRSA_Data_Huairou_20130301-20170228.csv')
#Menampilkan Head Data
df.head()

"""### Assessing Data"""

#Memeriksa tipe data
df.info()

#Mengecek adanya nilai null
df.isna().sum()

#Mengecek adanya duplikat data
print("Jumlah duplikasi:", df.duplicated().sum())

#Memeriksa parameter statistik
df.describe()

#Memeriksa adanya outlier
def iqr_outlier(data):
    q25, q75 = np.percentile(data, 25), np.percentile(data, 75)
    iqr = q75 - q25
    cut_off = iqr * 1.5
    minimum, maximum = q25 - cut_off, q75 + cut_off

    outliers = [x for x in data if x < minimum or x > maximum]
    return outliers

print("Outlier CO:", iqr_outlier(df['CO']))
print("Outlier Temperatur:", iqr_outlier(df['TEMP']))

"""### Cleaning Data"""

#Menangani Missing Value
#Menampilkan missing value
df[df.CO.isna()]

#Menghapus row dengan nilai NaN
df.dropna()

#Karena assessing hanya ada nilai null dan tidak ada duplikat atau outlier, maka hanya perlu melakukan dropna()

"""## Exploratory Data Analysis (EDA)

### Explore ...
"""

#Pertanyaan 1: Bagaimana pengaruh Karbon Monoksida (CO) terhadap Suhu Udara di Huairou?
#Menemukan Hubungan
df[['CO','TEMP']].corr()
#Hasil menunjukkan korelasi antara CO dan TEMP adalah -0.2610 atau -26%
#Berarti CO dan TEMP memiliki korelasi negatif dengan pengaruh 26%
#Berarti apabila CO naik, maka TEMP akan turun sebanyak 26% dan sebaliknya

#Pertanyaan 2: Bagaimana trend Karbon Monoksida (CO) dari tahun 2013-2017 di Huairou?
#Melihat nilai aggregasi
df.groupby(by="year").agg({
    "CO": ["mean"],
    "TEMP": ["mean"]
})
#Mengambil nilai per tahun menggunakan mean
#Terlihat Trend CO menurun secara signifikan pada tahun 2016 dan meningkat signifikan pada tahun 2017

"""## Visualization & Explanatory Analysis

### Pertanyaan 1: Bagaimana pengaruh Karbon Monoksida (CO) terhadap Suhu Udara di Huairou?
"""

#Mendeklarasikan variable untuk mempermudah coding
karbon = df.groupby("year").agg({"CO":"mean"})
suhu = df.groupby("year").agg({"TEMP": "mean"})

#Menampilkan Plot Regresi untuk menunjukkan hubungan antara CO dan TEMP
sns.regplot(x=karbon, y=suhu)
plt.show

"""### Pertanyaan 2: Bagaimana trend Karbon Monoksida (CO) dari tahun 2013-2017 di Huairou?"""

#Menampilkan plot tren menggunakan line chart
#Memasukkan nilai x dan y
sns.lineplot(data=karbon, x='year', y='CO')
#Memastikan data tiap tahun masuk dan agar tampilan nilainya sesuai dengan data (tidak desimal)
plt.xticks(df['year'].unique())
#Menampilkan plot
plt.show()

"""## Conclusion

- Conclution pertanyaan 1:
Pengaruh Karbon Monoksida terhadap Temperatur/Suhu Udara di Huairou adalah -26%,
yang berarti berpengaruh kecil dan negatif (apabila karbon meningkat maka suhu turun)

- Conclution pertanyaan 2:
Trend Karbon Monoksida di Huairou stabil dari Tahun 2013-2015 dan menurun signifikan pada 2016 lalu meningkat signifikan pada 2017
"""